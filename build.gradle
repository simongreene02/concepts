buildscript {
    ext {
        slf4jVersion = '1.7.25'
        guavaVersion = '27.0-jre'
        guiceVersion = '4.2.2'
        findbugsVersion = '3.0.2'
        jacksonVersion = '2.9.7'
        lombokVersion = '1.18.12'
        junitPlatformVersion = '1.3.1'
        junitJupiterVersion = '5.6.2'
        mockitoVersion = '3.5.5'
        truthVersion = '1.0'
    }
}

plugins {
    id('com.github.sherter.google-java-format') version '0.8'
    id 'java'
    id 'application'
}

mainClassName = 'com.greatworksinc.concepts.Main'
group = 'com.greatworksinc.concepts'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
    google()
}

dependencies {

    // commons
    compile "org.slf4j:slf4j-simple:${slf4jVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile "com.google.inject:guice:${guiceVersion}"
    compile "com.google.inject.extensions:guice-assistedinject:${guiceVersion}"
    compile "com.google.code.findbugs:jsr305:${findbugsVersion}"

    // junit jupiter
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"

    // mockito
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.mockito:mockito-junit-jupiter:${mockitoVersion}"

    // truth
    testCompile "com.google.truth:truth:${truthVersion}"
    testImplementation("com.google.truth.extensions:truth-java8-extension:${truthVersion}")

    // test equality
    testCompile "com.google.guava:guava-testlib:${guavaVersion}"
}

test {
    useJUnitPlatform()
}

task format(type: com.github.sherter.googlejavaformatgradleplugin.GoogleJavaFormat) {
}

compileJava.dependsOn format
